[{"D:\\ChartDemo\\chartdemo\\src\\index.js":"1","D:\\ChartDemo\\chartdemo\\src\\reportWebVitals.js":"2","D:\\ChartDemo\\chartdemo\\src\\App.js":"3","D:\\ChartDemo\\chartdemo\\src\\helpers\\fetchDataHelper.js":"4","D:\\ChartDemo\\chartdemo\\src\\components\\ChartJS\\BarChart.js":"5","D:\\ChartDemo\\chartdemo\\src\\components\\ChartJS\\StackedBarChart.js":"6","D:\\ChartDemo\\chartdemo\\src\\components\\Nivo\\TreeMap.js":"7","D:\\ChartDemo\\chartdemo\\src\\components\\Nivo\\data.js":"8","D:\\ChartDemo\\chartdemo\\src\\components\\ApexChart\\LineChart.js":"9","D:\\ChartDemo\\chartdemo\\src\\components\\ApexChart\\BrushChart.js":"10","D:\\ChartDemo\\chartdemo\\src\\components\\ApexChart\\TreeMap.js":"11","D:\\ChartDemo\\chartdemo\\src\\components\\PrinterComponent.js":"12","D:\\ChartDemo\\chartdemo\\src\\components\\ComponentToPrint.js":"13","D:\\ChartDemo\\chartdemo\\src\\components\\mockupData\\ExportMockupData.js":"14","D:\\ChartDemo\\chartdemo\\src\\data\\constData.js":"15","D:\\ChartDemo\\chartdemo\\src\\helpers\\generateMockupData.js":"16","D:\\ChartDemo\\chartdemo\\src\\helpers\\generateMockupHelper.js":"17","D:\\ChartDemo\\chartdemo\\src\\components\\ApexChart\\Heatmap.js":"18","D:\\ChartDemo\\chartdemo\\src\\components\\FilterComponent.js":"19","D:\\ChartDemo\\chartdemo\\src\\components\\ApexChart\\Heatmap1.js":"20","D:\\ChartDemo\\chartdemo\\src\\components\\ApexChart\\PieChart.js":"21","D:\\ChartDemo\\chartdemo\\src\\components\\FilterComponent2.js":"22","D:\\ChartDemo\\chartdemo\\src\\helpers\\generateDataHelper.js":"23","D:\\ChartDemo\\chartdemo\\src\\components\\FilterComponent3.js":"24","D:\\ChartDemo\\chartdemo\\src\\components\\FilterComponent1.js":"25"},{"size":547,"mtime":1611045532764,"results":"26","hashOfConfig":"27"},{"size":362,"mtime":499162500000,"results":"28","hashOfConfig":"27"},{"size":5984,"mtime":1614653675542,"results":"29","hashOfConfig":"27"},{"size":1260,"mtime":1610424433929,"results":"30","hashOfConfig":"27"},{"size":2249,"mtime":1610424433915,"results":"31","hashOfConfig":"27"},{"size":2074,"mtime":1610424433919,"results":"32","hashOfConfig":"27"},{"size":672,"mtime":1610424433927,"results":"33","hashOfConfig":"27"},{"size":11134,"mtime":1610424433927,"results":"34","hashOfConfig":"27"},{"size":1493,"mtime":1610424433906,"results":"35","hashOfConfig":"27"},{"size":3162,"mtime":1610424433901,"results":"36","hashOfConfig":"27"},{"size":2302,"mtime":1611223070060,"results":"37","hashOfConfig":"27"},{"size":466,"mtime":1610424433927,"results":"38","hashOfConfig":"27"},{"size":341,"mtime":1610788604781,"results":"39","hashOfConfig":"27"},{"size":1125,"mtime":1615064032866,"results":"40","hashOfConfig":"27"},{"size":2082,"mtime":1615062417175,"results":"41","hashOfConfig":"27"},{"size":2315,"mtime":1615064038971,"results":"42","hashOfConfig":"27"},{"size":8888,"mtime":1615064328600,"results":"43","hashOfConfig":"27"},{"size":1216,"mtime":1611225074362,"results":"44","hashOfConfig":"27"},{"size":862,"mtime":1611171662781,"results":"45","hashOfConfig":"27"},{"size":798,"mtime":1611159906373,"results":"46","hashOfConfig":"27"},{"size":1436,"mtime":1611172837963,"results":"47","hashOfConfig":"27"},{"size":708,"mtime":1611158679488,"results":"48","hashOfConfig":"27"},{"size":2222,"mtime":1611221286325,"results":"49","hashOfConfig":"27"},{"size":983,"mtime":1611159313624,"results":"50","hashOfConfig":"27"},{"size":2929,"mtime":1611223608661,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"qznws6",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"54"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"54"},"D:\\ChartDemo\\chartdemo\\src\\index.js",[],["113","114"],"D:\\ChartDemo\\chartdemo\\src\\reportWebVitals.js",[],"D:\\ChartDemo\\chartdemo\\src\\App.js",[],"D:\\ChartDemo\\chartdemo\\src\\helpers\\fetchDataHelper.js",[],"D:\\ChartDemo\\chartdemo\\src\\components\\ChartJS\\BarChart.js",[],["115","116"],"D:\\ChartDemo\\chartdemo\\src\\components\\ChartJS\\StackedBarChart.js",[],["117","118"],"D:\\ChartDemo\\chartdemo\\src\\components\\Nivo\\TreeMap.js",[],"D:\\ChartDemo\\chartdemo\\src\\components\\Nivo\\data.js",[],"D:\\ChartDemo\\chartdemo\\src\\components\\ApexChart\\LineChart.js",[],"D:\\ChartDemo\\chartdemo\\src\\components\\ApexChart\\BrushChart.js",[],"D:\\ChartDemo\\chartdemo\\src\\components\\ApexChart\\TreeMap.js",["119"],"import React from 'react'\r\nimport Chart from 'react-apexcharts'\r\nimport './style.css'\r\n\r\nfunction TreeMap(props) {\r\n  const options = {\r\n    legend: {\r\n      show: true,\r\n    },\r\n    // chart: {\r\n    //   height: 350,\r\n    //   type: \"treemap\",\r\n    // },\r\n    title: {\r\n      text: \"Treemap\",\r\n    },\r\n    // colors: demo_colors,\r\n    plotOptions: {\r\n      treemap: {\r\n        // distributed: true,\r\n        // enableShades: false,\r\n      },\r\n    },\r\n    // annotations: {\r\n    //   points: {\r\n    //     label: {\r\n    //       // text: 'abc'\r\n    //     }\r\n    //   }\r\n    // }\r\n    style: {\r\n      fontFamily: 'Helvetica, Arial, sans-serif',\r\n    },\r\n    tooltip: {\r\n      custom: function({series, seriesIndex, dataPointIndex, w}) {\r\n        let dataPoint = w.globals.initialSeries[seriesIndex].data[dataPointIndex]\r\n        // {x: \"Đường 34\", y: 67} \r\n        let street = dataPoint.x\r\n        let value = dataPoint.y\r\n        let district = w.globals.seriesNames[seriesIndex]\r\n        let color = w.globals.colors[seriesIndex]  \r\n        let trend = props.trend[seriesIndex][dataPointIndex]\r\n        let colorTrend = '#00d150'\r\n        let arrow = '&#8593'\r\n        if (trend<0) {\r\n          colorTrend = 'red'\r\n          arrow = '&#8595'\r\n          trend *=-1\r\n        }\r\n        else if (trend === 0) {\r\n          arrow = '-'\r\n          colorTrend = 'rgb(255, 204, 0)'\r\n        }\r\n        \r\n        return (\r\n          `<div class=\"tooltipContainer\" style='--btn-bg-color:${color}; --trend-color:${colorTrend}'>\r\n            <h3 class=\"district\">${district}</h3>\r\n            <span>${street} : </span>\r\n            <span style='font-weight:bold;'>${value}</span>\r\n            <span class='arrow'>${arrow}</span>\r\n            <span class='trend'>${trend}%</span>\r\n          </div>`\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {\r\n        !props.data ? null \r\n        :\r\n        <Chart\r\n          options={options}\r\n          // colors={state.colors}\r\n          series={props.data}\r\n          type=\"treemap\"\r\n          width=\"900\"\r\n          height='500'\r\n        />\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TreeMap\r\n\r\nconst styles = {\r\n  tooltip: {\r\n    padding: 10,\r\n    backgroundColor: 'yellow'\r\n    // position: 'relative', \r\n    // border: '2px solid #000000'\r\n  }\r\n}","D:\\ChartDemo\\chartdemo\\src\\components\\PrinterComponent.js",[],"D:\\ChartDemo\\chartdemo\\src\\components\\ComponentToPrint.js",[],"D:\\ChartDemo\\chartdemo\\src\\components\\mockupData\\ExportMockupData.js",[],"D:\\ChartDemo\\chartdemo\\src\\data\\constData.js",[],"D:\\ChartDemo\\chartdemo\\src\\helpers\\generateMockupData.js",[],"D:\\ChartDemo\\chartdemo\\src\\helpers\\generateMockupHelper.js",["120","121","122","123"],"D:\\ChartDemo\\chartdemo\\src\\components\\ApexChart\\Heatmap.js",["124"],"import React, {useState, useEffect } from 'react'\r\nimport Chart from 'react-apexcharts'\r\n\r\nfunction Heatmap(props) {\r\n  const { usecase, data } = props\r\n  // usecase === 2 -> usecase 12, usecase === 3 -> usecase 13\r\n  const [state, setState] = useState({\r\n    options : {\r\n      series: [],\r\n      dataLabels: {\r\n        enabled: false\r\n      },\r\n      plotOptions: {\r\n        heatmap: {\r\n          colorScale: {\r\n            inverse: usecase === 3\r\n          }\r\n        }\r\n      },\r\n      title: {\r\n        text: 'HeatMap Chart'\r\n      },\r\n      grid: {\r\n        padding: {\r\n          right: 20\r\n        }\r\n      }\r\n    }\r\n  })\r\n\r\n  useEffect(() => {\r\n    setState({\r\n      options: {\r\n        ...state.options,\r\n        plotOptions: {\r\n          heatmap: {\r\n            colorScale: {\r\n              inverse: usecase === 3\r\n            }\r\n          }\r\n        },\r\n      }\r\n    })\r\n  }, [usecase])\r\n\r\n  return(\r\n    <>\r\n      {\r\n        !data ? <></>\r\n        :\r\n        <Chart\r\n          options={state.options}\r\n          series={data}\r\n          type=\"heatmap\"\r\n          width=\"900\"\r\n          height={(data.length === 7 || usecase>1) ? 450 : 800}\r\n        />\r\n      }\r\n    </>\r\n  )\r\n} \r\n\r\nexport default Heatmap","D:\\ChartDemo\\chartdemo\\src\\components\\FilterComponent.js",["125","126"],"import React, {useEffect, useState} from 'react'\r\nimport _ from 'lodash'\r\nimport { Select, DatePicker } from 'antd';\r\n\r\nconst { Option } = Select;\r\n\r\nconst FilterComponent = (props) => {\r\n  const [type, setType] = useState('month');\r\n  const [dateValue, setDateValue] = useState(null)\r\n\r\n  const handleTypeChange = (value) => {\r\n    setDateValue(null)\r\n    setType(value)\r\n  }\r\n\r\n  useEffect(() => {\r\n    props.handleFilterChange(dateValue ? dateValue.toDate().toString() : null)\r\n  }, [dateValue])\r\n  \r\n  return (\r\n    <>\r\n      <Select value={type} onChange={handleTypeChange}>\r\n        <Option value=\"month\">Tháng</Option>\r\n        <Option value=\"quarter\">Quý</Option>\r\n        <Option value=\"year\">Năm</Option>\r\n      </Select>\r\n      <DatePicker onChange={setDateValue} picker={type} value={dateValue}/>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default FilterComponent","D:\\ChartDemo\\chartdemo\\src\\components\\ApexChart\\Heatmap1.js",[],["127","128"],"D:\\ChartDemo\\chartdemo\\src\\components\\ApexChart\\PieChart.js",["129"],"import React, {useEffect, useState} from 'react'\r\nimport Chart from 'react-apexcharts'\r\n\r\nfunction PieChart(props) {\r\n  const { data, labels } = props \r\n  const [state, setState] = useState({\r\n    options: {\r\n      series: [44, 55, 13, 43, 22],\r\n      chart: {\r\n        width: 380,\r\n        type: 'pie',\r\n      },\r\n      labels: ['Team A', 'Team B', 'Team C', 'Team D', 'Team E'],\r\n      responsive: [{\r\n        breakpoint: 480,\r\n        options: {\r\n          chart: {\r\n            width: 200\r\n          },\r\n          legend: {\r\n            position: 'bottom'\r\n          }\r\n        }\r\n      }]\r\n    }\r\n  })\r\n\r\n  useEffect(() => {\r\n    setState({\r\n      options: {\r\n        series: [44, 55, 13, 43, 22],\r\n        chart: {\r\n          width: 380,\r\n          type: 'pie',\r\n        },\r\n        labels: ['Team A', 'Team B', 'Team C', 'Team D', 'Team E'],\r\n        responsive: [{\r\n          breakpoint: 480,\r\n          options: {\r\n            chart: {\r\n              width: 200\r\n            },\r\n            legend: {\r\n              position: 'bottom'\r\n            }\r\n          }\r\n        }]\r\n      }\r\n    })\r\n  }, [])\r\n\r\n  return(\r\n    <>\r\n      {\r\n        !data ? null \r\n        :\r\n        <Chart\r\n          options={state.options}\r\n          // colors={state.colors}\r\n          series={state.options.series}\r\n          type=\"pie\"\r\n          width=\"900\"\r\n          height='500'\r\n        />\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PieChart","D:\\ChartDemo\\chartdemo\\src\\components\\FilterComponent2.js",["130"],"import React, { useState, useEffect } from 'react'\r\nimport {DatePicker, Select} from 'antd'\r\n\r\nconst { Option } = Select;\r\n\r\nexport default function FilterComponent2(props) {\r\n  const [type, setType] = useState('date')\r\n  const [dateValue, setDateValue] = useState(null)\r\n\r\n  useEffect(() => {\r\n    props.handleFilterChange(dateValue ? dateValue.toDate().toString() : null, type)\r\n  }, [type, dateValue])\r\n\r\n  return (\r\n    <>\r\n      <Select value={type} onChange={setType} style={{ width: 130}}>\r\n        <Option value=\"timeslot\">Khung giờ</Option>\r\n        <Option value=\"date\">Thứ</Option>\r\n      </Select>\r\n      <DatePicker onChange={setDateValue} picker='month' value={dateValue}/>\r\n    </>\r\n  )\r\n}","D:\\ChartDemo\\chartdemo\\src\\helpers\\generateDataHelper.js",[],"D:\\ChartDemo\\chartdemo\\src\\components\\FilterComponent3.js",["131"],"import React, { useState, useEffect } from 'react'\r\nimport _ from 'lodash'\r\nimport {DatePicker, Select} from 'antd'\r\n\r\nconst { Option } = Select;\r\n\r\nexport default function FilterComponent3(props) {\r\n  const [type, setType] = useState('date')\r\n  const [brand, setBrand] = useState(0)\r\n  const [month, setMonth] = useState(null)\r\n\r\n  useEffect(() => {\r\n    props.handleFilterChange(month, type)\r\n  }, [brand, month, type])\r\n\r\n  return(\r\n    <>\r\n      <Select value={type} onChange={setType} style={{ width: 130}}>\r\n        <Option value=\"date\">Thứ</Option>\r\n        <Option value=\"day\">Ngày</Option>\r\n      </Select>\r\n      <Select value={brand} onChange={setBrand} style={{width: 120}}>\r\n        <Option value={0}>Tất cả</Option>\r\n        {\r\n          _.times(5, (index) => {\r\n            return <Option key={index+1} value={index+1}>Chi nhánh {index+1}</Option>\r\n          })\r\n        }\r\n      </Select>\r\n      <DatePicker onChange={setMonth} picker='month'/>\r\n  </>\r\n  )\r\n}","D:\\ChartDemo\\chartdemo\\src\\components\\FilterComponent1.js",["132","133"],"import React, {useState, useEffect} from 'react'\r\nimport _ from 'lodash'\r\nimport { Select, DatePicker } from 'antd';\r\n\r\nimport {PROVINCE} from '../data/constData'\r\nimport { generateDistrict } from '../helpers/generateDataHelper'\r\n\r\nconst { Option } = Select;\r\n\r\nconst FilterComponent1 = (props) => {\r\n  const [type, setType] = useState('month');\r\n  const [dateValue, setDateValue] = useState(null)\r\n  const [province, setProvince] = useState(0)\r\n  const [selectedDistrictList, setSelectedDistrictList] = useState(['Tất cả'])\r\n  const [districtList, setDistrictList] = useState([])\r\n\r\n  const handleFilterChange = (dateValue) => {\r\n    if (dateValue) {\r\n      let index = selectedDistrictList.findIndex(element => element === 'Tất cả')\r\n      if (index > -1) props.handleFilterChange(districtList.filter(item => item !=='Tất cả'))\r\n      else props.handleFilterChange(selectedDistrictList) \r\n    }\r\n    else props.handleFilterChange([])\r\n  }\r\n\r\n  const onDateChange = (value) => {\r\n    setDateValue(value)\r\n  }\r\n\r\n  const handleTypeChange = (value) => {\r\n    setDateValue(null)\r\n    setType(value)\r\n  }\r\n\r\n  \r\n  const onDistrictChange = (value) => {\r\n    let index = value.findIndex(element => element === 'Tất cả')\r\n    if (selectedDistrictList.length>0 && index>0) {\r\n      setSelectedDistrictList(['Tất cả'])\r\n    } \r\n    // neu co -> index = index, else index = -1\r\n    else {\r\n      if (value.length === 0) setSelectedDistrictList(['Tất cả'])\r\n      else {\r\n        if (index > -1) value = value.filter(item => item !=='Tất cả')\r\n        setSelectedDistrictList(value)\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    setSelectedDistrictList(['Tất cả'])\r\n    setDistrictList(generateDistrict(province))\r\n  }, [province])\r\n\r\n  useEffect(() => {\r\n    handleFilterChange(dateValue)\r\n  }, [province, dateValue, type, selectedDistrictList])\r\n\r\n  return (\r\n    <>\r\n      <Select value={province} onChange={setProvince} style={{width: 150}}>\r\n        {\r\n          PROVINCE.sort().map((item, index) => {\r\n            return(\r\n              <Option value={index}>{item}</Option>\r\n            )\r\n          })\r\n        }\r\n      </Select>\r\n      <Select \r\n        mode='multiple' \r\n        maxTagCount={1} \r\n        value={selectedDistrictList} \r\n        onChange={onDistrictChange} \r\n        style={{width: 'fit-content'}}\r\n        dropdownMatchSelectWidth={false}\r\n      >\r\n        {\r\n          districtList.map((item, index) => {\r\n            return(\r\n              <Option value={item}>{item}</Option>\r\n            )\r\n          })\r\n        }\r\n      </Select>\r\n      <Select value={type} onChange={handleTypeChange}>\r\n        <Option value=\"month\">Tháng</Option>\r\n        <Option value=\"quarter\">Quý</Option>\r\n        <Option value=\"year\">Năm</Option>\r\n      </Select>\r\n      <DatePicker onChange={onDateChange} picker={type} value={dateValue}/>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default FilterComponent1",{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"134","replacedBy":"138"},{"ruleId":"136","replacedBy":"139"},{"ruleId":"134","replacedBy":"140"},{"ruleId":"136","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":88,"column":7,"nodeType":"144","messageId":"145","endLine":88,"endColumn":13},{"ruleId":"142","severity":1,"message":"146","line":3,"column":26,"nodeType":"144","messageId":"145","endLine":3,"endColumn":32},{"ruleId":"142","severity":1,"message":"147","line":3,"column":34,"nodeType":"144","messageId":"145","endLine":3,"endColumn":45},{"ruleId":"142","severity":1,"message":"148","line":140,"column":7,"nodeType":"144","messageId":"145","endLine":140,"endColumn":12},{"ruleId":"142","severity":1,"message":"149","line":141,"column":7,"nodeType":"144","messageId":"145","endLine":141,"endColumn":18},{"ruleId":"150","severity":1,"message":"151","line":44,"column":6,"nodeType":"152","endLine":44,"endColumn":15,"suggestions":"153"},{"ruleId":"142","severity":1,"message":"154","line":2,"column":8,"nodeType":"144","messageId":"145","endLine":2,"endColumn":9},{"ruleId":"150","severity":1,"message":"155","line":18,"column":6,"nodeType":"152","endLine":18,"endColumn":17,"suggestions":"156"},{"ruleId":"134","replacedBy":"157"},{"ruleId":"136","replacedBy":"158"},{"ruleId":"142","severity":1,"message":"159","line":5,"column":17,"nodeType":"144","messageId":"145","endLine":5,"endColumn":23},{"ruleId":"150","severity":1,"message":"155","line":12,"column":6,"nodeType":"152","endLine":12,"endColumn":23,"suggestions":"160"},{"ruleId":"150","severity":1,"message":"155","line":14,"column":6,"nodeType":"152","endLine":14,"endColumn":26,"suggestions":"161"},{"ruleId":"142","severity":1,"message":"154","line":2,"column":8,"nodeType":"144","messageId":"145","endLine":2,"endColumn":9},{"ruleId":"150","severity":1,"message":"162","line":59,"column":6,"nodeType":"152","endLine":59,"endColumn":55,"suggestions":"163"},"no-native-reassign",["164"],"no-negated-in-lhs",["165"],["164"],["165"],["164"],["165"],"no-unused-vars","'styles' is assigned a value but never used.","Identifier","unusedVar","'SECTOR' is defined but never used.","'MAIN_SECTOR' is defined but never used.","'count' is assigned a value but never used.","'indexAdress' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'state.options'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setState' needs the current value of 'state.options'.","ArrayExpression",["166"],"'_' is defined but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["167"],["164"],["165"],"'labels' is assigned a value but never used.",["168"],["169"],"React Hook useEffect has a missing dependency: 'handleFilterChange'. Either include it or remove the dependency array.",["170"],"no-global-assign","no-unsafe-negation",{"desc":"171","fix":"172"},{"desc":"173","fix":"174"},{"desc":"175","fix":"176"},{"desc":"177","fix":"178"},{"desc":"179","fix":"180"},"Update the dependencies array to be: [state.options, usecase]",{"range":"181","text":"182"},"Update the dependencies array to be: [dateValue, props]",{"range":"183","text":"184"},"Update the dependencies array to be: [type, dateValue, props]",{"range":"185","text":"186"},"Update the dependencies array to be: [brand, month, props, type]",{"range":"187","text":"188"},"Update the dependencies array to be: [province, dateValue, type, selectedDistrictList, handleFilterChange]",{"range":"189","text":"190"},[887,896],"[state.options, usecase]",[486,497],"[dateValue, props]",[386,403],"[type, dateValue, props]",[400,420],"[brand, month, props, type]",[1791,1840],"[province, dateValue, type, selectedDistrictList, handleFilterChange]"]